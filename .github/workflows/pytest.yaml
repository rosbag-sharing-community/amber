name: ci
on:
  pull_request:
    paths:
      - .github/workflows/pytest.yaml
      - amber/**
      - tests/**
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
  release:
    types: [published]

jobs:
  ci:
    name: ci
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10.12"]
        poetry-version: ["1.5.1"]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/cleanup_runner
      - name: install google test
        run: sudo apt update & sudo apt install -y googletest
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: install
        run: poetry install --with=dev
      - name: test
        run: poetry run task test
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.WASABI_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.WASABI_SECRET_ACCESS_KEY}}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./_htmlcov/coverage.xml
          flags: pytest # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    name: build
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10.12"]
        poetry-version: ["1.5.1"]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/cleanup_runner
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: install
        run: poetry install
      - name: build
        run: poetry build
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: "dist/*"
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          tags: ghcr.io/${{ github.repository_owner }}/amber:latest
          no-cache: true
          push: ${{ github.event_name != 'pull_request' }}
          context: .
